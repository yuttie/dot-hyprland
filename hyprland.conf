# This is an example Hyprland config file.
# Refer to the wiki for more information.
# https://wiki.hyprland.org/Configuring/Configuring-Hyprland/

# Please note not all available settings / options are set here.
# For a full list, see the wiki

# You can split this configuration into multiple files
# Create your files separately and then link them to this file like this:
# source = ~/.config/hypr/myColors.conf


################
### MONITORS ###
################

# See https://wiki.hyprland.org/Configuring/Monitors/
monitor = , preferred, auto, 1


###################
### MY PROGRAMS ###
###################

# See https://wiki.hyprland.org/Configuring/Keywords/

# Set programs that you use
$terminal   = ~/.local/bin/term start --always-new-process
$editor     = $terminal -- nvim
$webbrowser = ~/.local/bin/google-chrome-stable
$rofi       = rofi -no-case-sensitive -matching regex -sort -sorting-method fzf
$menu       = $rofi -modi drun##run -show drun -show-icons -drun-show-actions
$rofiWorkspace = hyprctl -j workspaces | jq -r ".[].name" | $rofi -dmenu -i -p "workspace"


#############################
### ENVIRONMENT VARIABLES ###
#############################

# See https://wiki.hyprland.org/Configuring/Environment-variables/

env = XCURSOR_THEME, Breeze
env = XCURSOR_SIZE, 32
env = HYPRCURSOR_SIZE, 32

env = XDG_SESSION_TYPE,wayland
env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_CURRENT_SESSION,Hyprland
env = XDG_SESSION_DESKTOP,Hyprland
env = LIBSEAT_BACKEND,logind
env = GDK_BACKEND,wayland,x11,*
env = QT_QPA_PLATFORM,wayland;xcb
env = SDL_VIDEODRIVER,wayland
env = QT_QPA_PLATFORMTHEME,qt5ct  # Has effect also for Qt6 (no need to be qt6ct)
env = GDK_DPI_SCALE,1.33333
env = QT_SCALE_FACTOR,1.33333
env = MOZ_ENABLE_WAYLAND,1
env = WINIT_UNIX_BACKEND,x11
env = _JAVA_AWT_WM_NONREPARENTING,1

# Input method
env = XMODIFIERS,@im=fcitx
env = QT_IM_MODULE,fcitx
env = QT_IM_MODULES,wayland;fcitx;ibus
env = QT5_IM_MODULE,fcitx
env = SDL_IM_MODULE,fcitx
env = GLFW_IM_MODULE,ibus


#################
### AUTOSTART ###
#################

# Import specific environment variables into the systemd user session and dbus
$env-vars-to-import = DISPLAY WAYLAND_DISPLAY
$my-env-vars-to-import = XCURSOR_THEME XCURSOR_SIZE HYPRCURSOR_SIZE XDG_SESSION_TYPE XDG_CURRENT_DESKTOP XDG_CURRENT_SESSION XDG_SESSION_DESKTOP LIBSEAT_BACKEND GDK_BACKEND QT_QPA_PLATFORM SDL_VIDEODRIVER QT_QPA_PLATFORMTHEME GDK_DPI_SCALE QT_SCALE_FACTOR MOZ_ENABLE_WAYLAND WINIT_UNIX_BACKEND _JAVA_AWT_WM_NONREPARENTING XMODIFIERS QT_IM_MODULE QT_IM_MODULES QT5_IM_MODULE SDL_IM_MODULE GLFW_IM_MODULE
exec-once = systemctl --user import-environment $env-vars-to-import $my-env-vars-to-import
exec-once = dbus-update-activation-environment --systemd $env-vars-to-import $my-env-vars-to-import

# Lock groups by default
exec = hyprctl dispatch lockgroups lock

# hyprpm
exec-once = hyprpm reload --notify

# Wallpaper
exec-once = hyprpaper

# Idle daemon
exec-once = hypridle

# Update environment variables
exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=Hyprland

# Autostart
exec-once = xrdb -load ~/.Xresources
exec-once = pasystray
exec-once = nm-applet --indicator
exec-once = blueman-applet
exec-once = dropbox
exec-once = /usr/libexec/polkit-gnome-authentication-agent-1

exec-once = fcitx5 -dr
exec-once = waybar

# Settings for Gnome apps
$gnome-schema = org.gnome.desktop.interface
exec = gsettings set $gnome-schema color-scheme 'prefer-light'  # Valid values are “default”, “prefer-dark”, “prefer-light”
exec = gsettings set $gnome-schema icon-theme 'WhiteSur-light'
exec = gsettings set $gnome-schema gtk-theme 'WhiteSur-Light'
exec = gsettings set $gnome-schema gtk-key-theme 'Emacs'
exec = gsettings set $gnome-schema font-name 'Sans 10'
exec = gsettings set $gnome-schema cursor-theme 'Breeze'
exec = gsettings set $gnome-schema cursor-size '32'
exec = gsettings set $gnome-schema font-antialiasing 'grayscale'
exec = gsettings set $gnome-schema font-hinting 'none'
exec = gsettings set org.gnome.settings-daemon.plugins.xsettings overrides "{'Gtk/IMModule':<'fcitx'>}"


#####################
### LOOK AND FEEL ###
#####################

# Refer to https://wiki.hyprland.org/Configuring/Variables/

# https://wiki.hyprland.org/Configuring/Variables/#general
general {
    gaps_in = 8
    gaps_out = 16

    border_size = 8

    # https://wiki.hyprland.org/Configuring/Variables/#variable-types for info about colors
    col.active_border = rgba(33ccffee) rgba(33ff7aee) 45deg
    col.inactive_border = rgba(ffffff33)

    layout = dwindle

    no_focus_fallback = true
}

# https://wiki.hyprland.org/Configuring/Variables/#decoration
decoration {
    rounding = 16

    # Change transparency of focused and unfocused windows
    active_opacity = 1.0
    inactive_opacity = 1.0

    drop_shadow = true
    shadow_range = 128
    shadow_render_power = 2
    col.shadow = rgba(00000088)
    shadow_offset = 0 24
    shadow_scale = 0.95

    # https://wiki.hyprland.org/Configuring/Variables/#blur
    blur {
        enabled = true
        size = 8
        passes = 3
        ignore_opacity = true
        noise = 0.02
    }
}

group {
    col.border_active = rgba(ff3370ee) rgba(ffad33ee) 45deg
    col.border_inactive = rgba(ffffff33)

    groupbar {
        col.active = rgba(ffad33ee)
        col.inactive = rgba(ffffff33)
        render_titles = false
    }
}

# https://wiki.hyprland.org/Configuring/Variables/#animations
animations {
    enabled = true

    # Default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}

# See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
dwindle {
    pseudotile = true # Master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    force_split = 2
    preserve_split = true # You probably want this
}

# See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
master {
    new_status = master
}

# https://wiki.hyprland.org/Configuring/Variables/#misc
misc {
    force_default_wallpaper = 0 # Set to 0 or 1 to disable the anime mascot wallpapers
    disable_hyprland_logo = false # If true disables the random hyprland logo / anime girl background. :(
    mouse_move_enables_dpms = false
    key_press_enables_dpms = true
    new_window_takes_over_fullscreen = 1
    exit_window_retains_fullscreen = true
}


#############
### INPUT ###
#############

# https://wiki.hyprland.org/Configuring/Variables/#input
input {
    kb_layout = jp
    kb_variant = dvorak
    kb_model =
    kb_options = ctrl:nocaps,mod:custom
    kb_rules =
    numlock_by_default = true
    repeat_delay = 300
    repeat_rate = 60

    follow_mouse = 1

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.

    touchpad {
        natural_scroll = false
    }
}

# https://wiki.hyprland.org/Configuring/Variables/#gestures
gestures {
    workspace_swipe = false
}

# Example per-device config
# See https://wiki.hyprland.org/Configuring/Keywords/#per-device-input-configs for more
device {
    name = epic-mouse-v1
    sensitivity = -0.5
}

binds {
    scroll_event_delay = 0
    allow_workspace_cycles = true
    ignore_group_lock = true
    window_direction_monitor_fallback = false
}


####################
### KEYBINDINGSS ###
####################

# See https://wiki.hyprland.org/Configuring/Keywords/
$mainMod = SUPER # Sets "Windows" key as main modifier

# Launch app
bind = $mainMod, semicolon, exec, $terminal
bind = $mainMod, E, exec, $editor
bind = $mainMod, W, exec, $webbrowser
bind = $mainMod, R, exec, $menu
bind = $mainMod, Zenkaku_Hankaku, exec, killall fcitx5; fcitx5 -dr

# Session
bind = $mainMod&Control_L, X, exec, loginctl lock-session
bind = $mainMod&Control_L, Q, exit,

# Monitor
bind = $mainMod, comma, focusmonitor, l
bind = $mainMod, period, focusmonitor, r
bind = $mainMod&Control_L, Left, focusmonitor, l
bind = $mainMod&Control_L, Right, focusmonitor, r
bind = $mainMod&Control_L, Up, focusmonitor, u
bind = $mainMod&Control_L, Down, focusmonitor, d

# Workspace
bind = $mainMod, B, workspace, previous_per_monitor
bind = $mainMod&Shift_L, Tab, workspace, m-1
bind = $mainMod, Tab, workspace, m+1
bind = $mainMod, Left, workspace, m-1
bind = $mainMod, Right, workspace, m+1
bind = $mainMod, mouse_left, workspace, m-1
bind = $mainMod, mouse_right, workspace, m+1
bind = $mainMod, V, exec, name=$($rofiWorkspace); if [ -n "$name" ]; then hyprctl dispatch workspace "name:$name"; fi
bind = $mainMod&Shift_L, R, exec, name=$($rofiWorkspace); if [ -n "$name" ]; then hyprctl dispatch renameworkspace $(hyprctl -j activeworkspace | jq .id) "$name"; fi
bind = $mainMod&Shift_L, comma, movecurrentworkspacetomonitor, l
bind = $mainMod&Shift_L, period, movecurrentworkspacetomonitor, r
bind = $mainMod&Shift_L&Control_L, Left, movecurrentworkspacetomonitor, l
bind = $mainMod&Shift_L&Control_L, Right, movecurrentworkspacetomonitor, r
bind = $mainMod&Shift_L&Control_L, Up, movecurrentworkspacetomonitor, u
bind = $mainMod&Shift_L&Control_L, Down, movecurrentworkspacetomonitor, d

# Dwindle layout
bind = $mainMod, slash, togglesplit,

# Group
bind = $mainMod, Escape, lockgroups, toggle
bind = $mainMod, T, togglegroup,
bind = $mainMod, P, changegroupactive, b
bind = $mainMod, N, changegroupactive, f
bind = $mainMod, mouse_down, changegroupactive, b
bind = $mainMod, mouse_up, changegroupactive, f
bind = $mainMod&Shift_L, P, movegroupwindow, b
bind = $mainMod&Shift_L, N, movegroupwindow, f

# Focused window
bind = $mainMod&Control_L, C, killactive,
bind = $mainMod, space, focuswindow, floating
bind = $mainMod, space, alterzorder, top
bind = $mainMod&Control_L, space, focuswindow, tiled
bind = $mainMod&Shift_L, space, togglefloating,
bind = $mainMod, F, fullscreenstate, 2 1
bind = $mainMod&Shift_L, S, pin,

# Move focus
bind = $mainMod, H, movefocus, l
bind = $mainMod, L, movefocus, r
bind = $mainMod, K, movefocus, u
bind = $mainMod, J, movefocus, d

# Move focused window
bind = $mainMod&Shift_L, H, movewindow, l
bind = $mainMod&Shift_L, L, movewindow, r
bind = $mainMod&Shift_L, K, movewindow, u
bind = $mainMod&Shift_L, J, movewindow, d
bind = $mainMod&Control_L, H, movewindoworgroup, l
bind = $mainMod&Control_L, L, movewindoworgroup, r
bind = $mainMod&Control_L, K, movewindoworgroup, u
bind = $mainMod&Control_L, J, movewindoworgroup, d
bind = $mainMod, M, exec, name=$($rofiWorkspace); if [ -n "$name" ]; then hyprctl dispatch movetoworkspacesilent "name:$name"; fi
bind = $mainMod&Shift_L, M, exec, name=$($rofiWorkspace); if [ -n "$name" ]; then hyprctl dispatch movetoworkspace "name:$name"; fi

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
bind  = $mainMod, mouse:274, killactive,

# Magnifier
$calcZoomInFactor  = echo "$(hyprctl -j getoption cursor:zoom_factor | jq .float) * 1.41421356" | bc
$calcZoomOutFactor = echo "$(hyprctl -j getoption cursor:zoom_factor | jq .float) / 1.41421356" | bc
bind = $mainMod, Page_Up, exec, factor=$($calcZoomInFactor); if echo $factor | grep -E '^\.' >/dev/null 2>&1; then factor=1; fi; hyprctl keyword cursor:zoom_factor $factor
bind = $mainMod, Page_Down, exec, factor=$($calcZoomOutFactor); if echo $factor | grep -E '^\.' >/dev/null 2>&1; then factor=1; fi; hyprctl keyword cursor:zoom_factor $factor
bind = $mainMod&Control_L, mouse_up, exec, factor=$($calcZoomOutFactor); if echo $factor | grep -E '^\.' >/dev/null 2>&1; then factor=1; fi; hyprctl keyword cursor:zoom_factor $factor
bind = $mainMod&Control_L, mouse_down, exec, factor=$($calcZoomInFactor); if echo $factor | grep -E '^\.' >/dev/null 2>&1; then factor=1; fi; hyprctl keyword cursor:zoom_factor $factor

# Screen capture
$grimblast = grimblast --notify save
$cwebp = cwebp -lossless -q 100 -m 6 -mt
bind = ,                  Print, exec, $grimblast screen - | $cwebp -o ~/Pictures/screen_$(date +%Y-%m-%d-%H%M%S).webp -- -
bind = $mainMod,          Print, exec, $grimblast output - | $cwebp -o ~/Pictures/output_$(date +%Y-%m-%d-%H%M%S).webp -- -
bind = Shift_L,           Print, exec, $grimblast active - | $cwebp -o ~/Pictures/active_$(date +%Y-%m-%d-%H%M%S).webp -- -
bind = Control_L,         Print, exec, $grimblast area   - | $cwebp -o ~/Pictures/area_$(date +%Y-%m-%d-%H%M%S).webp   -- -

# Rofi
$findUserDirs = fd --type d --type l --follow --no-ignore --owner $USER --exclude /snapshot --exclude /proc --exclude /sys --exclude /dev --exclude /mnt --exclude /tmp --base-directory / --absolute-path
$findPapers = fd --type f --type l --follow --no-ignore --extension pdf --base-directory ~/Literature
bind = $mainMod&Shift_L, F, exec, $rofi -show window
bind = $mainMod&Shift_L, D, exec, path=$($findUserDirs | $rofi -dmenu -i -p "Open a directory"); if [ -n "$path" ]; then xdg-open "$path"; fi
bind = $mainMod&Shift_L, T, exec, path=$($findUserDirs | $rofi -dmenu -i -p "Open a terminal with a directory"); if [ -n "$path" ]; then $terminal --cwd "$path"; fi
bind = $mainMod&Control_L, P, exec, path=$($findPapers | $rofi -dmenu -i -p "Open a paper" -theme-str "window { width: 50%; }"); if [ -n "$path" ]; then xdg-open "$HOME/Literature/$path"; fi

# Mako
bind  = $mainMod, S, exec, makoctl mode -t do-not-disturb
bind  = $mainMod, X, exec, makoctl mode -t expand-group
bind  = $mainMod, A, exec, makoctl menu rofi -dmenu -p "Mako action: " -theme-str "window { width: 20em; height: 10em; }"
binde = $mainMod, D, exec, makoctl dismiss
bind  = $mainMod, U, exec, makoctl restore


##############################
### WINDOWS AND WORKSPACES ###
##############################

windowrulev2 = suppressevent maximize, class:.* # You'll probably like this.

# Make some windows floating by default
windowrulev2 = float, class:^(org.gnome.Calculator)$
windowrulev2 = float, class:^(wdisplays)$
windowrulev2 = float, class:^(nemo)$,title:( Properties)$
windowrulev2 = float, class:^(org.inkscape.Inkscape)$,title:(SVG Input)
windowrulev2 = float, class:^(Minecraft)
windowrulev2 = float, title:^(Cities: Skylines II)$

# Forces focus on the window as long as it’s visible
windowrulev2 = stayfocused, class:^(pinentry-)

# Idle inhibit rules
windowrulev2 = idleinhibit focus, class:^(mpv)$

# Disable blur
windowrulev2 = noblur, class:^()$,title:^()$  # For Google Chrome's menus

# Google Chrome's open/save dialogs
windowrulev2 = float, class:^(Xdg-desktop-portal-gtk)$
# windowrulev2 = noblur, class:^(Xdg-desktop-portal-gtk)$
# windowrulev2 = noborder, class:^(Xdg-desktop-portal-gtk)$
# windowrulev2 = noshadow, class:^(Xdg-desktop-portal-gtk)$

# Layer rules
layerrule = dimaround,rofi
layerrule = blur,rofi
layerrule = blur,waybar


############################
### HOST-SPECIFIC CONFIG ###
############################
source = ~/.config/hypr_host_specific.conf
